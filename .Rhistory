lng = ~facility_longitude,
lat = ~ facility_latitude,
radius = 2,
stroke = FALSE,
fill = TRUE,
fillColor = year_pal_colors[[4]],
fillOpacity = 0.8,
group = 'Waste facility locations',
label = ~waste_facility,
labelOptions = labelOptions(noHide = FALSE, textOnly = TRUE)) %>%
addLegendCustom(position = 'bottomright',
colors = c('#ffffff', '#a9a9a9', '#1774b4'),
labels = c('County boundaries', 'Marcellus shale formation', 'Public water service areas'),
sizes = c(10, 10, 10),
shapes = c('square', 'square', 'square'),
borders = c('black', '#a9a9a9','#1774b4')) %>%
addLegendCustom(position = 'bottomright',
colors = year_pal_colors[[4]],
labels = 'Waste facility location',
sizes = 10,
shapes = 'circle',
borders = year_pal_colors[[4]]) %>%
addLayersControl(overlayGroups = c('County boundaries',
'Marcellus shale formation',
'Public water service areas',
'Wste facility locations'),
position = 'topleft') %>%
hideGroup('Public water service areas') %>%
setView(lat = 41.2033, lng = -77.1945, zoom = 7)
edwin_stim_base <- read_excel('DCNR EDWIN Well Data/Completion Report - Stimulation Base Fluids/completion_report_stimulation_base_fluids.xlsx', col_types = 'text')
colnames(edwin_stim_base) <- tolower(colnames(edwin_stim_base))
colnames(edwin_stim_base) <- gsub(colnames(edwin_stim_base), pattern = ' ', replacement = '')
edwin_stim_base <- read_excel('DCNR EDWIN Well Data/Completion Report - Stimulation Base Fluids/completion_report_stimulation_base_fluids.xlsx', col_types = 'text')
colnames(edwin_stim_base) <- tolower(colnames(edwin_stim_base))
colnames(edwin_stim_base) <- gsub(colnames(edwin_stim_base), pattern = ' ', replacement = '_')
colnames(edwin_stim_base) <- gsub(colnames(edwin_stim_base), pattern = ' ', replacement = '_')
colnames(edwin_stim_base) <- gsub(colnames(edwin_stim_base), pattern = '-', replacement = '')
colnames(edwin_stim_base) <- gsub(colnames(edwin_stim_base), pattern = '__', replacement = '_')
edwin_stim_base$stimulation_commencement_date <- as.Date(edwin_stim_base$stimulation_commencement_date, format = '%m/%d/%Y')
edwin_stim_base$stimulation_completion_date <- as.Date(edwin_stim_base$stimulation_completion_date, format = '%m/%d/%Y')
edwin_stim_base$`total_measured_depth_from_(ft)` <- as.numeric(edwin_stim_base$`total_measured_depth_from_(ft)`)
View(edwin_stim_base)
edwin_stim_base$`total_measured_depth_to_(ft)` <- as.numeric(edwin_stim_base$`total_measured_depth_to_(ft)`)
edwin_stim_base$`deepest_producing_depth_(ft)` <- as.numeric(edwin_stim_base$`deepest_producing_depth_(ft)`)
edwin_stim_base$`stimulation_base_fluid_volume_(gal)` <- as.numeric(edwin_stim_base$`stimulation_base_fluid_volume_(gal)`)
edwin_stim_base$`other_base_fluid(s)_used_volume_(gal)` <- as.numeric(edwin_stim_base$`other_base_fluid(s)_used_volume_(gal)`)
colnames(edwin_stim_base)
edwin_stim_base %>%
select(c(td_formation, radioactive_tracers_used, specify_tracer, stimulation_base_fluid, `other_base_fluid(s)_used`)) %>%
lapply(., unique)
nrow(edwin_stim_base)
length(unique(permit_number))
length(unique(edwin_stim_base$permit_number))
edwin_stim_base %>%
ggplot(aes(`stimulation_base_fluid_volume_(gal)`)) +
geom_histogram(fill = 'white',
color = 'black',
binwidth = 10) +
labs(x = 'Stimulation base fluid volume (gal)',
y = 'Count',
title = 'Distribution of base fluid volumes',
caption = sprintf('N entries missing volumes: %s', sum(is.na(edwin_stim_base$`stimulation_base_fluid_volume_(gal)`)))) +
theme_bw() +
theme(plot.caption = element_text(hjust = 0))
edwin_stim_base %>%
ggplot(aes(`stimulation_base_fluid_volume_(gal)`)) +
geom_histogram(fill = 'white',
color = 'black') +
labs(x = 'Stimulation base fluid volume (gal)',
y = 'Count',
title = 'Distribution of base fluid volumes',
caption = sprintf('N entries missing volumes: %s', sum(is.na(edwin_stim_base$`stimulation_base_fluid_volume_(gal)`)))) +
theme_bw() +
theme(plot.caption = element_text(hjust = 0))
edwin_stim_base %>%
filter(`stimulation_base_fluid_volume_(gal) < 1000000) %>%
ggplot(aes(`stimulation_base_fluid_volume_(gal)`)) +
edwin_stim_base %>%
filter(`stimulation_base_fluid_volume_(gal)` < 1000000) %>%
ggplot(aes(`stimulation_base_fluid_volume_(gal)`)) +
geom_histogram(fill = 'white',
color = 'black') +
labs(x = 'Stimulation base fluid volume (gal)',
y = 'Count',
title = 'Distribution of base fluid volumes under 1m gallons',
caption = sprintf('N entries missing volumes: %s', sum(is.na(edwin_stim_base$`stimulation_base_fluid_volume_(gal)`)))) +
theme_bw() +
theme(plot.caption = element_text(hjust = 0))
edwin_stim_base %>%
filter(`stimulation_base_fluid_volume_(gal)` == 0) %>%
n()
edwin_stim_base %>%
filter(`stimulation_base_fluid_volume_(gal)` == 0) %>%
count()
edwin_stim_base %>%
ggplot(aes(`other_base_fluid(s)_used_volume_(gal)`)) +
geom_histogram(fill = 'white',
color = 'black') +
labs(x = 'Other base fluid volume (gal)',
y = 'Count',
title = 'Distribution of other base fluid volumes',
caption = sprintf('N entries missing volumes: %s', sum(is.na(edwin_stim_base$`other_base_fluid(s)_used_volume_(gal)`)))) +
theme_bw() +
theme(plot.caption = element_text(hjust = 0))
getwd()
install.packages('waffle')
library(dplyr)
library(ggplot2)
library(waffle)
getwd()
setwd('/Users/jenniferfedor/Documents/Programming/R/30 Day Chart Challenge/')
library(rvest)
recipe <- read_html('https://cooking.nytimes.com/recipes/1017409-waffles')
View(recipe)
recipe %>% html_elements()
recipe %>% html_nodes()
recipe %>% html_node('article')
recipe %>% html_node('li')
recipe %>% html_node('ul')
recipe %>% html_node('ul class ="recipe-ingredients')
recipe %>% html_node('ul class ="recipe-ingredients"')
recipe %>% html_node('<ul class="recipe-time-yield">')
recipe %>% html_node('ul class="recipe-time-yield"')
recipe %>% html_node('ul')
recipe %>% html_node('ul') %>% html_text()
recipe %>% html_node('li') %>% html_text()
recipe %>% html_node('table')
recipe %>% html_nodes('li')
recipe %>% html_nodes('li') %>% html_text()
recipe %>%
html_nodes('li') %>%
html_text() %>%
.[3-12]
ingredients <- recipe %>%
html_nodes('li') %>%
html_text()
ingredients[3-12]
recipe %>%
html_nodes('li') %>%
html_text() %>%
.[3:12]
recipe %>%
html_nodes('li') %>%
html_text()
recipe %>%
html_nodes('li') %>%
html_text() %>%
.[3:11]
recipe %>%
html_nodes('li') %>%
html_text() %>%
.[3:11] %>%
html_table()
ingredients <- recipe %>%
html_nodes('li') %>%
html_text() %>%
.[3:11]
gsub(ingredients, pattern = '\\n', replacement = '')
ingredients %>%
gsub(., pattern = '/\s/g', replacement = ' ')
ingredients %>%
gsub(., pattern = '[\\s]+', replacement = ' ', perl = TRUE)
ingredients %>%
gsub(., pattern = '[\\s]+', replacement = ' ')
ingredients %>%
gsub(., pattern = '[\\s]+', replacement = ' ', perl = TRUE)
ingredients %>%
gsub(., pattern = '[:space:]+', replacement = ' ')
ingredients %>%
gsub(., pattern = '[:space:]', replacement = ' ')
ingredients %>%
gsub(., pattern = '[[:blank:]]', replacement = ' ')
ingredients %>%
gsub(., pattern = '[[:space:]]', replacement = ' ')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = '\\(.*|,.*', pattern = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = '\\(.*', pattern = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = '\(.*', pattern = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = '\\(.*', pattern = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = ' \\(.*', pattern = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = ' \\(.*', pattern = '', replacement = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = ' \\(', pattern = '', replacement = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = ' \(', pattern = '', replacement = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = ' \\(', pattern = '', replacement = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = ' \\(', replacement = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = ' \\(.*', replacement = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = ' \\(.*|,.*', replacement = '')
ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $|/.* grams| \\(.*|,.*', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5')
ingredients <- ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = ' \\(.*|,.*', replacement = '')
ingredients %>%
as.data.frame()
library(stringr)
?str_replace
library(tidyr)
ingredients %>%
as.data.frame() %>%
separate(`.`, into = c('measurement', 'units', 'ingredient'), sep = ' ', extra = 'merge')
ingredients %>%
as.data.frame() %>%
separate(into = c('measurement', 'units', 'ingredient'), sep = ' ', extra = 'merge')
ingredients %>%
as.data.frame() %>%
ingredients %>%
as.data.frame()
?as.data.frame
ingredients %>%
as.data.frame(colnames = 'ingredient_string') %>%
separate('ingredient_string',
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge')
ingredients %>%
as.data.frame(colnames = 'ingredient_string')
ingredients %>%
as.data.frame(col.names = 'ingredient_string')
ingredients %>%
data.frame(col.names = 'ingredient_string')
ingredients %>%
as.data.frame(col.names = c('ingredient_string'))
ingredients %>%
as.data.frame(col.names = c('ingredient_string')) %>%
str()
ingredients %>%
as.data.frame(col.names = c('ingredient_string'),
stringsAsFactors = FALSE) %>%
separate('ingredient_string',
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge')
ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
separate(`.`,
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge')
ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(ingredient_string = `.`)
ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(., ingredient_string = `.`)
ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(., ingredient_string = `.`) %>%
separate(ingredient_string,
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge')
ingredients_df <- ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(., ingredient_string = `.`) %>%
separate(ingredient_string,
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge') %>%
mutate(measurement = numeric(measurement))
ingredients_df <- ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(., ingredient_string = `.`) %>%
separate(ingredient_string,
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge') %>%
mutate(measurement = as.numeric(measurement))
ingredients_df <- ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(., ingredient_string = `.`) %>%
separate(ingredient_string,
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge') %>%
mutate(measurement = as.numeric(measurement)) %>%
select(ingredient, everything())
ingredients_df <- ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(., ingredient_string = `.`) %>%
separate(ingredient_string,
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge') %>%
mutate(measurement = as.numeric(measurement),
ingredient = str_to_title(ingredient)) %>%
select(ingredient, everything())
View(ingredients_df)
ingredients_df <- ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(., ingredient_string = `.`) %>%
separate(ingredient_string,
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge') %>%
mutate(measurement = as.numeric(measurement),
ingredient = str_to_sentence(ingredient)) %>%
select(ingredient, everything())
View(ingredients_df)
library(stringr)
ingredients_df <- ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(., ingredient_string = `.`) %>%
separate(ingredient_string,
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge') %>%
mutate(measurement = as.numeric(measurement),
units = str_replace(units, pattern = 's$', replacement = ''),
ingredient = str_to_sentence(ingredient)) %>%
select(ingredient, everything())
ingredients_df <- ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(., ingredient_string = `.`) %>%
separate(ingredient_string,
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge',
convert = TRUE) %>%
mutate(#measurement = as.numeric(measurement),
units = str_replace(units, pattern = 's$', replacement = ''),
ingredient = str_to_sentence(ingredient)) %>%
select(ingredient, everything())
ingredients
recipe %>%
html_nodes('li') %>%
html_text() %>%
.[3:11]
tribble(
~unit, ~tsp,
'teaspoon', 1,
'tablespoon', 3,
'cup', 48,
'large' 9
)
tribble(
~unit, ~tsp,
'teaspoon', 1,
'tablespoon', 3,
'cup', 48,
'large', 9
)
?left_join
ingredients_df %>%
left_join(conversions, by = 'ingredient')
conversions <- tribble(
~unit, ~tsp,
'teaspoon', 1,
'tablespoon', 3,
'cup', 48,
'large', 9
)
ingredients_df %>%
left_join(conversions, by = 'ingredient')
ingredients_df %>%
left_join(conversions, by = 'unit')
conversions <- tribble(
~units, ~tsp,
'teaspoon', 1,
'tablespoon', 3,
'cup', 48,
'large', 9
)
ingredients_df %>%
left_join(conversions, by = 'units')
ingredients_df %>%
left_join(conversions, by = 'units') %>%
mutate(measurement_in_tsp = measurement*tsp)
ingredients_df %>%
left_join(conversions, by = 'units') %>%
mutate(measurement_in_half_tsp = measurement*tsp*2)
ingredients_df %>%
left_join(conversions, by = 'units') %>%
mutate(measurement_in_half_tsp = measurement*tsp*2) %>%
select(c(ingredient, measurement_in_half_tsp))
ingredients_df <- ingredients_df %>%
left_join(conversions, by = 'units') %>%
mutate(measurement_in_half_tsp = measurement*tsp*2) %>%
select(c(ingredient, measurement_in_half_tsp))
ingredients <- recipe %>%
html_nodes('li') %>%
html_text() %>%
.[3:11]
# clean up the list
ingredients <- ingredients %>%
gsub(., pattern = '[[:space:]]+', replacement = ' ') %>%
gsub(., pattern = '^ | $', replacement = '') %>%
gsub(., pattern = '½', replacement = '0.5') %>%
gsub(., pattern = '/.* grams', replacement = '') %>%
gsub(., pattern = ' \\(.*|,.*', replacement = '')
# convert the list into a dataframe
ingredients <- ingredients %>%
as.data.frame(stringsAsFactors = FALSE) %>%
rename(., ingredient_string = `.`) %>%
separate(ingredient_string,
into = c('measurement', 'units', 'ingredient'),
sep = ' ',
extra = 'merge',
convert = TRUE) %>%
mutate(units = str_replace(units, pattern = 's$', replacement = ''),
ingredient = str_to_sentence(ingredient)) %>%
select(ingredient, everything())
# conversions to teaspoons via Google
conversions <- tribble(
~units, ~tsp,
'teaspoon', 1,
'tablespoon', 3,
'cup', 48,
'large', 9
)
# convert the measurements to common units (half tsp)
ingredients <- ingredients %>%
left_join(conversions, by = 'units') %>%
mutate(measurement_in_half_tsp = measurement*tsp*2) %>%
select(ingredient, measurement_in_half_tsp)
View(ingredients)
ingredients %>%
ggplot(aes(fill = as.factor(ingredient), values = measurement_in_half_tsp)) +
geom_waffle()
ingredients %>%
ggplot(aes(fill = as.factor(ingredient), values = measurement_in_half_tsp)) +
waffle::geom_waffle()
?geom_waffle
library(waffle)
??geom_waffle
remotes::install_github("hrbrmstr/waffle")
library(waffle)
ingredients %>%
ggplot(aes(fill = as.factor(ingredient), values = measurement_in_half_tsp)) +
waffle::geom_waffle()
